System.register(["jimu-core","jimu-ui","jimu-ui/advanced/data-source-selector","jimu-ui/advanced/setting-components"],(function(e,t){var a={},n={},c={},l={};return{setters:[function(e){a.AllDataSourceTypes=e.AllDataSourceTypes,a.DataSourceManager=e.DataSourceManager,a.Immutable=e.Immutable,a.React=e.React},function(e){n.Checkbox=e.Checkbox,n.Label=e.Label,n.TextInput=e.TextInput},function(e){c.DataSourceSelector=e.DataSourceSelector,c.FieldSelector=e.FieldSelector},function(e){l.SettingSection=e.SettingSection}],execute:function(){e((()=>{var e={244:e=>{"use strict";e.exports=a},321:e=>{"use strict";e.exports=n},89:e=>{"use strict";e.exports=c},298:e=>{"use strict";e.exports=l}},t={};function i(a){var n=t[a];if(void 0!==n)return n.exports;var c=t[a]={exports:{}};return e[a](c,c.exports,i),c.exports}i.d=(e,t)=>{for(var a in t)i.o(t,a)&&!i.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="";var o={};return i.p=window.jimuConfig.baseUrl,(()=>{"use strict";i.r(o),i.d(o,{__set_webpack_public_path__:()=>r,default:()=>s});var e=i(244),t=i(321),a=i(89),n=i(298);const{useState:c,useEffect:l}=e.React;function s(i){var o,s;const[r,u]=c((0,e.Immutable)([]));l((()=>{if(i.useDataSources&&i.useDataSources.length>0){const t=e.DataSourceManager.getInstance().getDataSource(i.useDataSources[0].dataSourceId);if(t){const a=t.getLayerDefinition().fields.filter((e=>!e.editable||!e.domain||e.domain&&"codedValue"!==e.domain.type)).map((e=>e.name));u((0,e.Immutable)(a))}}}),[i.useDataSources]);const d=(e,t)=>{i.onSettingChange({id:i.id,config:i.config.set(e,t)})};return e.React.createElement("div",{className:"widget-setting-listen-selection-change p-2"},e.React.createElement(n.SettingSection,{title:"Configure data settings"},e.React.createElement(t.Label,null,"Set the feature layer source. This must be an editable feature layer."),e.React.createElement(a.DataSourceSelector,{types:(0,e.Immutable)([e.AllDataSourceTypes.FeatureLayer]),useDataSources:i.useDataSources,mustUseDataSource:!0,onChange:e=>{i.onSettingChange({id:i.id,useDataSources:e})},widgetId:i.id}),i.useDataSources&&i.useDataSources.length>0&&e.React.createElement(e.React.Fragment,null,e.React.createElement(t.Label,{className:"pt-5"},"Select the field that the updates will be applied to. Valid fields must be editable and have a coded value domain."),e.React.createElement(a.FieldSelector,{useDataSources:i.useDataSources,onChange:e=>{const t=e.map((e=>({name:e.jimuName,allowNulls:!1})));i.onSettingChange({id:i.id,config:i.config.set("fields",t),useDataSources:[Object.assign(Object.assign({},i.useDataSources[0]),{fields:e.map((e=>e.jimuName))})]})},selectedFields:(null===(s=null===(o=null==i?void 0:i.config)||void 0===o?void 0:o.fields)||void 0===s?void 0:s.map((e=>e.name)))||(0,e.Immutable)([]),isMultiple:!0,isSearchInputHidden:!1,isDataSourceDropDownHidden:!0,useDropdown:!0,hiddenFields:r})),i.config.fields&&i.config.fields.length>0&&e.React.createElement(e.React.Fragment,null,e.React.createElement(t.Label,{className:"pt-2",size:"lg"},"Allow setting to null?"),i.config.fields.map((a=>e.React.createElement(t.Label,{centric:!0},e.React.createElement(t.Checkbox,{checked:i.config.fields.find((e=>e.name===a.name)).allowNulls,className:"mr-2",onChange:(e,t)=>{((e,t)=>{const a=(i.config.fields||[]).map((a=>a.name===t?Object.assign(Object.assign({},a),{allowNulls:e}):a));i.onSettingChange({id:i.id,config:i.config.set("fields",a)})})(t,a.name)}}),a.name))))),e.React.createElement(n.SettingSection,null,e.React.createElement(t.Label,{size:"lg"},"Clear Selection"),e.React.createElement(t.Label,{centric:!0},e.React.createElement(t.Checkbox,{checked:i.config.clearSelectionAfterApplyEdits,className:"mr-2",onChange:(e,t)=>{(e=>{i.onSettingChange({id:i.id,config:i.config.set("clearSelectionAfterApplyEdits",e)})})(t)}}),"After applying edits"),e.React.createElement(t.Label,{size:"lg"},"Widget title"),e.React.createElement(t.Label,{size:"sm"},"Displays at the top of the widget"),e.React.createElement(t.TextInput,{className:"pb-2",type:"text",defaultValue:i.config.widgetTitle,onAcceptValue:e=>{d("widgetTitle",e)}}),e.React.createElement(t.Label,{size:"lg"},"Button label"),e.React.createElement(t.Label,{size:"sm"},"For the button that applies the updates"),e.React.createElement(t.TextInput,{className:"pb-2",type:"text",defaultValue:i.config.buttonText,onAcceptValue:e=>{d("buttonText",e)}})))}function r(e){i.p=e}})(),o})())}}}));